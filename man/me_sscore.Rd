% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/me_sscore.R
\name{me_sscore}
\alias{me_sscore}
\title{Calculate quality of sum score of selected variables}
\usage{
me_sscore(me_data, df, new_name, ..., wt = NULL, drop = TRUE)
}
\arguments{
\item{me_data}{a data frame of class \code{me} containing
quality estimates from the variables specified in \code{...}.}

\item{df}{a data frame which contains data for the variables specified
in \code{...}.}

\item{new_name}{a bare unquoted name or a string specifying the name
of the new sum score.}

\item{...}{bare unquoted names or separate strings specifying
the variable names from which to estimate quality of their sum score.
They all must be present in \code{me_data} and \code{df}. At minimum,
it must be two or more variable names.}

\item{wt}{a non-NA numeric vector of the same length as the variables
specified in \code{...}. This will be used as weights in calculating the
sum scores of all variable. Be default, all variables are given the same
weight.}

\item{drop}{a logical stating whether to drop the questions that compose
the sum score (specified in \code{...}) If \code{FALSE} it retains the original questions
and the composite score.}
}
\value{
a \code{\link[tibble]{tibble}} similar to \code{me_data} but
with a new row containing the quality of a sum score with the name
specified in \code{new_name}.
}
\description{
\code{me_sscore} takes a data frame with quality estimates of class
 \code{me} and estimates the quality of a sum score for
 selected variables in \code{...}.
}
\examples{

# Toy data

library(tibble)
me_df <-
tibble(question = paste0("V", 1:5),
       quality = c(0.2, 0.3, 0.5, 0.6, 0.9),
       reliability = c(0.2, 0.4, 0.5, 0.5, 0.7),
       validity = c(0.8, 0.1, 0.6, 0.7, 0.8))


me_df <- structure(me_df, class = c(class(me_df), "me"))

sample_data <-
 as_tibble(
 setNames(
  replicate(5, rbinom(1000, 5, 0.6), simplify = FALSE),
 paste0("V", 1:5))
 )


me_sscore(
me_data = me_df,
df = sample_data,
new_name = new_sumscore,
V3, V4
)

me_sscore(
me_data = me_df,
df = sample_data,
new_name = new_sumscore,
"V1", "V2"
)


}
